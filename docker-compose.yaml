networks:
  student-microservice-dev:
    driver: bridge
  minio-network:
    driver: bridge

services:
  account-service:
    container_name: account-service
    build:
      context: .
      dockerfile: ./Account/Dockerfile
    networks:
      - student-microservice-dev
    depends_on:
      - postgres-account-db
    environment:
      ASPNETCORE_HTTP_PORTS: 80
  postgres-account-db:
    container_name: postgres-account-db
    image: postgres:17-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: accounts
    ports:
      - "5433:5432"
    networks:
      - student-microservice-dev
    volumes:
      - postgres-account-data:/var/lib/postgresql/data
  app:
    container_name: student-microservice
    build:
      context: .
      dockerfile: ./Microservice/Dockerfile
    networks:
      - student-microservice-dev
    depends_on:
      - postgres_db
    ports:
      - "5001:8080"
    volumes:
      - ./logs:/app/logs
  postgres_db:
    container_name: postgres
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: students
    ports:
      - "5432:5432"
    networks:
      - student-microservice-dev
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./logs:/app/logs
      
  apigateway:
    container_name: student-gateway
    build:
      context: .
      dockerfile: ./ApiGateway/Dockerfile
    ports:
      - "5000:8080"
    networks:
      - student-microservice-dev
    depends_on:
      - app
      - reportservice
    volumes:
      - ./logs:/app/logs
  reportservice:
    container_name: student-reportservice
    build:
      context: .
      dockerfile: ./ReportService/Dockerfile
    networks:
      - student-microservice-dev
    depends_on:
      - postgres_db
      - minio
      - rabbitmq
    volumes:
      - ./logs:/app/logs
  storageservice:
    build:
      context: .
      dockerfile: ./StorageService/Dockerfile
    networks:
      - student-microservice-dev
      - minio-network
    ports:
      - "5465:80"
    depends_on:
      - minio
      - rabbitmq
    volumes:
      - ./logs:/app/logs
  minio:
    container_name: minio
    image: minio/minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
      - ./logs:/app/logs
    networks:
      - minio-network
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - student-microservice-dev
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
volumes:
  postgres-account-data:
  postgres-data:
  minio-data: